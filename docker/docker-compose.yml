services:
  customer-db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - service_customer_network
  customer-service:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    restart: always
    depends_on:
      - customer-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_NAME: ${POSTGRES_NAME}
    volumes:
      - ../customers_manager:/app
    ports:
      - "8001:8001"
    networks:
      - service_customer_network
      - service_email_network
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - customer-db
    networks:
      - service_customer_network
volumes:
  postgres_data:
networks:
  service_customer_network:
    external: true
  service_email_network:
    external: true